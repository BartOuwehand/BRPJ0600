# Make a code that creates a m_inst for each image & colour correction for all images (WIP)
def m_true(m, b0, b1):#, b2, b3, b4):
    
    return m + (b0*c) + (b1*(c**2)) #+ (b2*(c**3)) + (b3*(c**4)) + (b4*(c**5))

def m_inst(m, a0, a1):
    
    return m + a0X + a1*c*X

def atmosph_ext(mx, a0, a1, b0, b1):
    
    return mtrue(m_inst(mx, a0, a1), b0, b1)
    

fit_result = {}
fit_resulterr = {}
for f in filt2:
    i = 0
    inst_par = np.zeros((len(epoch[f]),2))
    c_par = np.zeros((2,1))
    while i < 4:
        i += 1
        
        for e in range(len(epoch[f])):
            nonNaN
            
            c = ...
            X = ...
            M = mx
            
            popt1, pcov1 = optimize.curve_fit(m_inst,)
        
    tmp1 = []
    tmp2 = []
    for e in range(len(epoch[f])):
        nonNaN = np.isnan(mx[f][e]) == False
        
        X = airmass[f][e]
        M = mx[f][e][nonNaN]
        c = gaia_c[f][nonNaN]
